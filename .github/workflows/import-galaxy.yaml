name: import data

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:

jobs:
  galaxytool:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.commit-and-push-galaxytool.outputs.commit_hash }}
    steps:
    - name: checkout contents repository
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
    - name: delete previous import branch
      run: |
        branch_name="galaxytool-import-branch"
        # Check if the branch exists on the remote repository
        if git rev-parse --verify --quiet "origin/$branch_name"; then
          # The branch exists, so it can be safely deleted
          git push origin --delete "$branch_name"
          echo "Branch $branch_name has been deleted."
        else
          # The branch does not exist
          echo "Branch $branch_name does not exist on the remote repository."
        fi
    - name: Create and checkout feature branch
      run: git checkout -b galaxytool-import-branch
    - name: import galaxy tool data from server
      uses: arash77/research-software-ecosystem-utils/galaxytool-import@galaxy-tool-bulk-import
      with:
        repo-user: ${{ secrets.GITHUB_USER }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Commit and Push Changes
      id: commit-and-push-galaxytool
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_user_name: Tools Platform Ecosystem bot
        commit_user_email: tpe-bot@github.com
        commit_author: Tools Platform Ecosystem bot <tpe-bot@github.com>
        commit_message: import galaxy tools data on $(date)
        branch: galaxytool-import-branch
        create_branch: true
  merge:
    runs-on: ubuntu-latest
    needs:
      - galaxytools
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Merge feature branches
        run: |
          git config --local user.email "tpe-bot@github.com"
          git config --local user.name "Tools Platform Ecosystem bot"
          merge_branch_if_exists() {
            local branch_name="$1"
            # Check if the branch exists on the remote repository
            if git ls-remote --exit-code --heads origin "$branch_name" &>/dev/null; then
              # The branch exists on the remote, so it can be safely merged
              git fetch origin "$branch_name"
              git merge "origin/$branch_name"
              echo "Merged $branch_name into the current branch."
            else
              # The branch does not exist on the remote
              echo "Branch $branch_name does not exist on the remote repository."
            fi
          }
          merge_branch_if_exists "galaxy-import-branch"
          git push origin master
  clean-branches:
    runs-on: ubuntu-latest
    needs:
      - merge
    if: always()
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Delete feature branches
        run: |
          git config --local user.email "tpe-bot@github.com"
          git config --local user.name "Tools Platform Ecosystem bot"
          delete_branch_if_exists() {
            local branch_name="$1"
            # Check if the branch exists on the remote repository
            if git ls-remote --exit-code --heads origin "$branch_name" &>/dev/null; then
              # The branch exists on the remote, so it can be deleted
              git push origin --delete "$branch_name"
              echo "Deleted $branch_name into the current branch."
            else
              # The branch does not exist on the remote
              echo "Branch $branch_name does not exist on the remote repository."
            fi
          }
          delete_branch_if_exists "galaxy-import-branch"
