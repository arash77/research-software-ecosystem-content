{
    "accessibility": "Open access",
    "additionDate": "2024-06-18T12:44:34.691271Z",
    "biotoolsCURIE": "biotools:triededup",
    "biotoolsID": "triededup",
    "confidence_flag": "tool",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "yeyx2626@gmail.com",
            "name": "Adam Yongxin Ye",
            "typeEntity": "Person"
        },
        {
            "name": "Jianqiao Hu",
            "typeEntity": "Person"
        }
    ],
    "description": "A fast trie-based deduplication algorithm to handle ambiguous bases in high-throughput sequencing.",
    "editPermission": {
        "type": "private"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Data handling",
                    "uri": "http://edamontology.org/operation_2409"
                },
                {
                    "term": "Read mapping",
                    "uri": "http://edamontology.org/operation_3198"
                },
                {
                    "term": "Sequence analysis",
                    "uri": "http://edamontology.org/operation_2403"
                }
            ]
        }
    ],
    "homepage": "https://github.com/lolrenceH/TrieDedup",
    "language": [
        "Python"
    ],
    "lastUpdate": "2024-06-18T12:44:34.694901Z",
    "license": "Apache-2.0",
    "name": "TrieDedup",
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1186/s12859-024-05775-w",
            "metadata": {
                "abstract": "Background: High-throughput sequencing is a powerful tool that is extensively applied in biological studies. However, sequencers may produce low-quality bases, leading to ambiguous bases, ‘N’s. PCR duplicates introduced in library preparation are conventionally removed in genomics studies, and several deduplication tools have been developed for this purpose. Two identical reads may appear different due to ambiguous bases and the existing tools cannot address ‘N’s correctly or efficiently. Results: Here we proposed and implemented TrieDedup, which uses the trie (prefix tree) data structure to compare and store sequences. TrieDedup can handle ambiguous base ‘N’s, and efficiently deduplicate at the level of raw sequences. We also reduced its memory usage by approximately 20% by implementing restrictedDict in Python. We benchmarked the performance of the algorithm and showed that TrieDedup can deduplicate reads up to 270-fold faster than pairwise comparison at a cost of 32-fold higher memory usage. Conclusions: The TrieDedup algorithm may facilitate PCR deduplication, barcode or UMI assignment, and repertoire diversity analysis of large-scale high-throughput sequencing datasets with its ultra-fast algorithm that can account for ambiguous bases due to sequencing errors.",
                "authors": [
                    {
                        "name": "Hu J."
                    },
                    {
                        "name": "Luo S."
                    },
                    {
                        "name": "Tian M."
                    },
                    {
                        "name": "Ye A.Y."
                    }
                ],
                "date": "2024-12-01T00:00:00Z",
                "journal": "BMC Bioinformatics",
                "title": "TrieDedup: a fast trie-based deduplication algorithm to handle ambiguous bases in high-throughput sequencing"
            },
            "pmcid": "PMC11025179",
            "pmid": "38637756"
        }
    ],
    "toolType": [
        "Command-line tool",
        "Script"
    ],
    "topic": [
        {
            "term": "Mapping",
            "uri": "http://edamontology.org/topic_0102"
        },
        {
            "term": "PCR experiment",
            "uri": "http://edamontology.org/topic_3519"
        },
        {
            "term": "Sequencing",
            "uri": "http://edamontology.org/topic_3168"
        }
    ]
}
