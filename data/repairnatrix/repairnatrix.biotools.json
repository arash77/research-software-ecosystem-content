{
    "additionDate": "2024-06-19T06:37:19.235500Z",
    "biotoolsCURIE": "biotools:repairnatrix",
    "biotoolsID": "repairnatrix",
    "confidence_flag": "tool",
    "cost": "Free of charge",
    "credit": [
        {
            "email": "schwarzk@uni-marburg.de",
            "name": "Peter Michael Schwarz",
            "orcidid": "https://orcid.org/0000-0001-8763-1507",
            "typeEntity": "Person"
        },
        {
            "email": "freisleben@uni-marburg.de",
            "name": "Bernd Freisleben",
            "typeEntity": "Person"
        }
    ],
    "description": "Snakemake workflow for processing DNA sequencing data for DNA storage.",
    "editPermission": {
        "type": "public"
    },
    "function": [
        {
            "operation": [
                {
                    "term": "Read pre-processing",
                    "uri": "http://edamontology.org/operation_3219"
                },
                {
                    "term": "Sequence trimming",
                    "uri": "http://edamontology.org/operation_3192"
                },
                {
                    "term": "Sequencing error detection",
                    "uri": "http://edamontology.org/operation_3195"
                }
            ]
        }
    ],
    "homepage": "https://github.com/umr-ds/repairnatrix",
    "language": [
        "C",
        "Python"
    ],
    "lastUpdate": "2024-06-19T06:37:19.238924Z",
    "license": "MIT",
    "name": "RepairNatrix",
    "operatingSystem": [
        "Linux",
        "Mac",
        "Windows"
    ],
    "owner": "Pub2Tools",
    "publication": [
        {
            "doi": "10.1093/bioadv/vbad117",
            "metadata": {
                "abstract": "Motivation: There has been rapid progress in the development of error-correcting and constrained codes for DNA storage systems in recent years. However, improving the steps for processing raw sequencing data for DNA storage has a lot of untapped potential for further progress. In particular, constraints can be used as prior information to improve the processing of DNA sequencing data. Furthermore, a workflow tailored to DNA storage codes enables fair comparisons between different approaches while leading to reproducible results. Results: We present RepairNatrix, a read-processing workflow for DNA storage. RepairNatrix supports preprocessing of raw sequencing data for DNA storage applications and can be used to flag and heuristically repair constraint-violating sequences to further increase the recoverability of encoded data in the presence of errors. Compared to a preprocessing strategy without repair functionality, RepairNatrix reduced the number of raw reads required for the successful, error-free decoding of the input files by a factor of 25-35 across different datasets.",
                "authors": [
                    {
                        "name": "Freisleben B."
                    },
                    {
                        "name": "Heider D."
                    },
                    {
                        "name": "Schwarz P.M."
                    },
                    {
                        "name": "Welzel M."
                    }
                ],
                "citationCount": 1,
                "date": "2023-01-01T00:00:00Z",
                "journal": "Bioinformatics Advances",
                "title": "RepairNatrix: a Snakemake workflow for processing DNA sequencing data for DNA storage"
            },
            "pmcid": "PMC10941317",
            "pmid": "38496344"
        }
    ],
    "toolType": [
        "Workflow"
    ],
    "topic": [
        {
            "term": "DNA",
            "uri": "http://edamontology.org/topic_0654"
        },
        {
            "term": "Sequence assembly",
            "uri": "http://edamontology.org/topic_0196"
        },
        {
            "term": "Workflows",
            "uri": "http://edamontology.org/topic_0769"
        }
    ]
}
